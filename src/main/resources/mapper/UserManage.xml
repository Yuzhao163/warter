<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
        <!--
        author：李小杰
        date:3/27/2021
        function:add,update
        -->
<mapper namespace="com.water.water.dao.UserManageDao">
    <resultMap id="BaseResultMap" type="com.water.water.pojo.UserManage">
        <id column="UserID" property="UserID" jdbcType="VARCHAR"/>
        <result column="UserName" property="UserName" jdbcType="VARCHAR"/>
        <result column="UserPswd" property="UserPswd" jdbcType="VARCHAR"/>
        <result column="UClassID" property="UClassID" jdbcType="VARCHAR"/>
        <result column="Ustate" property="Ustate" jdbcType="INTEGER"/>
        <result column="RegTime" property="RegTime" jdbcType="DATE"/>
        <result column="MoPhone" property="MoPhone" jdbcType="VARCHAR"/>
        <result column="RealName" property="RealName" jdbcType="VARCHAR"/>
        <result column="DPTName" property="DPTName" jdbcType="VARCHAR"/>
        <result column="ModTime" property="ModTime" jdbcType="DATE"/>
    </resultMap>
    <select id="getByUserManageName" resultMap="BaseResultMap">
        select
        UserID,UserName,UserPswd,UClassID,Ustate,RegTime,MoPhone,RealName,
        DPTName from td_user where UserName = #{UserName};
    </select>

    <select id="getByusername" resultMap="BaseResultMap">
        select
        UserID,UserName,UserPswd,UClassID,Ustate,RegTime,MoPhone,RealName,
        DPTName from td_user where UserName = #{UserName};
    </select>

    <select id="getAllUserManage" resultMap="BaseResultMap">
        select UserID,UserName,RealName,UClassID,MoPhone,DPTName,RegTime from td_user;
    </select>

    <insert id="insertTotd_user">
        insert into td_user(UserName,UserPswd,RealName,UClassID,MoPhone,DPTName) values (#{UserName},#{UserPswd},#{RealName},#{UClassID},#{MoPhone},#{DPTName})
    </insert>

    <delete id="deletetd_user">
        delete from td_user where UserID = #{UserID}
    </delete>

    <!--这里是同步插入数据，插入userManager的数据之后同时也会往注册页面插入一条新的员工信息-->
    <insert id="insert_user">
        insert into user(username, password, telephone) values(#{UserName},#{UserPswd},#{MoPhone});
    </insert>
    <update id="updatetd_user">
        <!--update td_user set UserName = #{UserName}, UserPswd = #{UserPswd} ,UClassID = #{UClassID}, MoPhone = #{MoPhone}, RealName = #{RealName}, DPTName = #{DPTName} where UserID = #{UserID}-->
        update td_user set UserName=#{UserName}, UserPswd = #{UserPswd}, UClassID = #{UClassID}, MoPhone = #{MoPhone}, RealName = #{RealName}, DPTName = #{DPTName} where UserID = #{UserID}
    </update>

    <select id="getUserMessageByName" resultMap="BaseResultMap">
        select * from td_user where UserName = #{UserName};
    </select>

    <!--这一行可能没用-->
    <update id="update_userMessage">update td_user set UserName = #{UserName}, UserPswd = #{UserPswd}, RealName = #{RealName}, MoPhone = #{MoPhone}, DPTName = #{DPTName} where UserID = #{UserID}; </update>

    <update id="update_user">update user set username = #{UserName}, password = #{UserPswd}, telephone = #{MoPhone} where UserID = #{UserID}; </update>


<!-- 获取所有用户名称-->
    <select id="getAllUserName" resultType="String">
        select UserName from td_user where UserID != #{UserID} ;
    </select>

<!--  根据id修改用户信息  -->
    <update id="updateUserInfo">
        update td_user set UserName=#{UserName}, UserPswd = #{UserPswd}, MoPhone = #{MoPhone},
                            RealName = #{RealName}, DPTName = #{DPTName}, ModTime = #{ModTime}
                       where UserID = #{UserID}
    </update>

<!--  根据id获取用户名称  -->
    <select id="getUserNameByID" resultType="String">
        select UserName from td_user where UserID = #{UserID}
    </select>

<!--  获取用户id和名称  -->
    <select id="getUIDNameByID" resultMap="BaseResultMap">
        select UserID,UserName from td_user where UserID = ${UserID};
    </select>

<!--  查询除了id下的用户名称是否存在  -->
    <select id="checkUserName" resultMap="BaseResultMap">
        select * from td_user where UserName=#{userName} and UserID != ${userID};
    </select>

<!--  根据用户id获取用户全部信息  -->
    <select id="getUserByID" resultMap="BaseResultMap">
        select * from td_user where UserID = #{userID};
    </select>

</mapper>
