<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!--如果id不设置成自动递增的，但是如果不加递增符号的话，就会报如下的错误
Field 'id' doesn't have a default value] with root cause-->

<!--  <insert id="insertUser">
      insert into user(username,password) values(#{username},#{password});
  </insert>-->
<mapper namespace="com.water.water.dao.td_PipesDao">
    <resultMap id="BaseResultMap" type="com.water.water.pojo.td_PIPs">
        <result column="PipID" property="PipID" jdbcType="VARCHAR"/>
        <result column="PipName" property="PipName" jdbcType="VARCHAR"/>
        <result column="PipDesc" property="PipDesc" jdbcType="VARCHAR"/>
        <result column="PipLeadPhone" property="PipLeadPhone"
                jdbcType="VARCHAR"/>
        <result column="AreaID" property="AreaID" jdbcType="VARCHAR"/>
        <result column="PipCreateDate" property="PipCreateDate"
                jdbcType="DATE"/>
        <result column="PipLeader" property="PipLeader" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="getPips" resultMap="BaseResultMap">
        select PipName,PipID from td_pips where AreaID = #{AreaID};
    </select>

    <select id="getPipsByAreaID" resultMap="BaseResultMap">
        select PipName,PipID from td_pips where AreaID = #{AreaID};
    </select>

    <select id="getPipByAreaID" resultMap="BaseResultMap">
        select PipName,PipID from td_pips where AreaID = #{AreaID};
    </select>

    <!--    根据管线id查询管线-->
    <select id="getPipNameByPipID" resultType="String">
        select PipName from td_pips where PipID = #{PipID}
    </select>

    <!--根据管线查区域-->
<!--    <select id="getAreasIdByPips" resultMap="BaseResultMap">-->
<!--        select AreaID from td_pips where PipID=#{PipID};-->
<!--    </select>-->

    <!--    返回全部管线信息-->
    <select id="getPipList" resultMap="BaseResultMap">
        select * from td_pips
    </select>



    <update id="updatePipLeader">update td_pips set PipLeader=#{PipLeader} where PipID=#{PipID} </update>

    <!--根据管线名称获得管线id-->
    <select id="getPipIDByPipName" resultMap="BaseResultMap">select PipID from td_pips where PipName = #{PipName}; </select>

    <!--获取所有管线领导名称-->
    <select id="getPipLeader" resultMap="BaseResultMap">select PipLeader from td_pips where PipLeader is not null; </select>

    <!--通过PipLeder获取对应PipID-->
    <select id="getPipID" resultMap="BaseResultMap">select PipID from td_pips where PipLeader = #{PipLeader}; </select>

    <select id="getPipsByAreaID1" resultMap="BaseResultMap">select PipName,PipID from td_pips where AreaID = #{AreaID} and PipLeader is null; </select>

    <select id="getPipsByID" resultMap="BaseResultMap">select PipName from td_pips where PipID = #{PipID} and PipLeader is null; </select>

    <!--获取管线4.27/15.37-->
    <!--//和管线分布起冲突，修改人员管理获取管线5.2 获取数据库中所有的管线-->
    <select id="getPipe" resultMap="BaseResultMap">select * from td_pips; </select>

    <!--设置对应ID的PipLeader为空-->
    <update id="updateLeaderByPipID">update td_pips set PipLeader = null where PipID = #{PipID}; </update>

    <!--5.2获取PipLeader为空的所有PipID-->
    <select id="getLeaderIsNull" resultMap="BaseResultMap">select PipID from td_pips where PipLeader is null; </select>

    <!--5.2带有追加功能的更新PipLeader，使得PipLeader具有多个人员-->
    <update id="appendPipLeader">update td_pips set PipLeader=CONCAT_WS(',',PipLeader,#{PipLeader}) where PipID = #{PipID}; </update>


    <update id="updatePipLeader">
        update td_pips set PipLeader=#{PipLeader} where PipID=#{PipID}
    </update>

    <!--根据管线名称获得管线id-->
    <select id="getPipIDByPipName" resultMap="BaseResultMap">
        select PipID from td_pips where PipName = #{PipName};
    </select>

    <!--获取所有管线领导名称-->
    <select id="getPipLeader" resultMap="BaseResultMap">
        select PipLeader from td_pips where PipLeader is not null;
    </select>

    <!--通过PipLeder获取对应PipID-->
    <select id="getPipID" resultMap="BaseResultMap">
        select PipID from td_pips where PipLeader = #{PipLeader};
    </select>


    <select id="getPipsByAreaID1" resultMap="BaseResultMap">
        select PipName,PipID from td_pips where AreaID = #{AreaID} and PipLeader is null;
    </select>

    <select id="getPipsByID" resultMap="BaseResultMap">
        select PipName from td_pips where PipID = #{PipID} and PipLeader is null;
    </select>


    <!--获取管线4.27/15.37-->
    <select id="getPipes" resultMap="BaseResultMap">
        select * from td_pips where PipLeader is null;
    </select>

    <!--设置对应ID的PipLeader为空-->
    <update id="updateLeaderByPipID">
        update td_pips set PipLeader = null where PipID = #{PipID};
    </update>
</mapper>
